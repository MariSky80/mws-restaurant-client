{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","sw.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","file":"sw.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","const idb = require('idb');\nconst IDB_DB = 'restaurant-db';\nconst IDB_RESTAURANTS = 'restaurants';\nconst IDB_PENDING_RESTAURANTS = 'pending_restaurants';\nconst IDB_REVIEWS = 'reviews';\nconst IDB_PENDING_REVIEWS = 'pending_reviews';\n\nconst dbPromise = idb.open(IDB_DB, 2, function (upgradeDb) {\n  switch (upgradeDb.oldVersion) {\n    case 0:\n    case 1:\n    case 2:\n      const storeRestaurant = upgradeDb.createObjectStore(IDB_RESTAURANTS, {\n        keyPath: 'id'\n      });\n      storeRestaurant.createIndex('by-id', 'id', { unique: true });\n\n      const storeReviews = upgradeDb.createObjectStore(IDB_REVIEWS, {\n        keyPath: 'id'\n      });\n      //storeReviews.createIndex('by-id', 'id', { unique: true });\n      storeReviews.createIndex('by-restaurant-id', 'restaurant_id');\n\n      const pendingRestaurants = upgradeDb.createObjectStore(IDB_PENDING_RESTAURANTS, {\n        keyPath: 'id'\n      });\n      pendingRestaurants.createIndex('by-id', 'id', {unique:true});\n\n      const pendingReviews = upgradeDb.createObjectStore(IDB_PENDING_REVIEWS, {\n        keyPath:'id', autoIncrement:true\n      });\n      pendingReviews.createIndex('by-id', 'id', {unique:true});\n  }\n});\n\nconst staticCacheName = 'mws-restaurant-stage-3';\n\nlet filesToCache = [\n  '/',\n  'manifest.json',\n  'index.html',\n  'restaurant.html',\n  'css/main.css',\n  'css/detail.css',\n  'js/bundle_main.js',\n  'js/bundle_restaurant.js',\n  'sw.js',\n  'img/favicon/apple-icon-57x57.png',\n  'img/favicon/apple-icon-60x60.png',\n  'img/favicon/apple-icon-72x72.png',\n  'img/favicon/apple-icon-76x76.png',\n  'img/favicon/apple-icon-114x114.png',\n  'img/favicon/apple-icon-120x120.png',\n  'img/favicon/apple-icon-144x144.png',\n  'img/favicon/apple-icon-152x152.png',\n  'img/favicon/apple-icon-180x180.png',\n  'img/favicon/android-icon-192x192.png',\n  'img/favicon/favicon-32x32.png',\n  'img/favicon/favicon-96x96.png',\n  'img/favicon/favicon-16x16.png',\n  'img/favicon/ms-icon-144x144.png',\n  'img/favicon/ms-icon-70x70.png',\n  'img/favicon/ms-icon-150x150.png',\n  'img/favicon/ms-icon-310x310.png',\n  'img/favicon/android-icon-512x512.png',\n  'img/favicon/favicon.ico',\n  'img/1-380_small.jpg',\n  'img/1-512_medium.jpg',\n  'img/1-800_large.jpg',\n  'img/2-380_small.jpg',\n  'img/2-512_medium.jpg',\n  'img/2-800_large.jpg',\n  'img/3-380_small.jpg',\n  'img/3-512_medium.jpg',\n  'img/3-800_large.jpg',\n  'img/4-380_small.jpg',\n  'img/4-512_medium.jpg',\n  'img/4-800_large.jpg',\n  'img/5-380_small.jpg',\n  'img/5-512_medium.jpg',\n  'img/5-800_large.jpg',\n  'img/6-380_small.jpg',\n  'img/6-512_medium.jpg',\n  'img/6-800_large.jpg',\n  'img/7-380_small.jpg',\n  'img/7-512_medium.jpg',\n  'img/7-800_large.jpg',\n  'img/8-380_small.jpg',\n  'img/8-512_medium.jpg',\n  'img/8-800_large.jpg',\n  'img/9-380_small.jpg',\n  'img/9-512_medium.jpg',\n  'img/9-800_large.jpg',\n  'img/10-380_small.jpg',\n  'img/10-512_medium.jpg',\n  'img/10-800_large.jpg',\n];\n\n\nself.addEventListener('install', function(event) {\n  event.waitUntil(\n    caches.open(staticCacheName).then(function(cache) {\n      return cache.addAll(filesToCache);\n    })\n  );\n});\n\n\nself.addEventListener('activate', function(event) {\n  event.waitUntil(\n    caches.keys().then(function(cacheNames) {\n      return Promise.all(\n        cacheNames.filter(function(cacheName) {\n          return cacheName.startsWith('mws-') &&\n                 cacheName != staticCacheName;\n        }).map(function(cacheName) {\n          return caches.delete(cacheName);\n        })\n      ).then(() => { console.log('Service worker active');} );\n    })\n  );\n});\n\n\nself.addEventListener('fetch', function(event) {\n  event.respondWith(\n    caches.match(event.request).then(function(response) {\n      return response || fetch(event.request);\n    })\n  );\n});\n\n\nself.addEventListener('message', function(event) {\n  if (event.data.action === 'skipWaiting') {\n    self.skipWaiting();\n  }\n});\n\n\n//Based on https://github.com/WICG/BackgroundSync/blob/master/explainer.md\nself.addEventListener('sync', function(event) {\n  switch(event.tag) {\n    case 'review':  event.waitUntil(sendAllReviews());\n      break;\n    case 'favorite': event.waitUntil(sendAllFavorites());\n      break;\n  }\n});\n\n\n/**\n * @description  Send review to server and stores it at database.\n * @constructor\n * @param {object} review - Reviwe object.\n * @param {function} callback - Callback function.\n */\nfunction postReview(review) {\n  return fetch(`http://localhost:1337/reviews`,\n    {\n      method:'post',\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body:JSON.stringify(review)\n    })\n    .then(response => response.json())\n    .then(review => console.log(review));\n}\n\n\n/**\n * @description  Send review to server and stores it at database.\n * @constructor\n * @param {object} review - Reviwe object.\n * @param {function} callback - Callback function.\n */\nfunction putFavorite(favorite) {\n  return fetch(`http://localhost:1337/restaurants/${favorite.restaurant_id}/?is_favorite=${favorite.is_favorite}`,\n    {\n      method:'put',\n      headers: {\n        Accept: \"application/json, text/plain, */*\",\n        \"Content-Type\": \"application/json\"\n      },\n      body:JSON.stringify(favorite)\n    })\n    .then(response => response.json())\n    .then(favorite => console.log(favorite));\n}\n\n\n/**\n * @description  Send all reviews to server\n * @constructor\n */\nfunction sendAllReviews() {\n  dbPromise.then( db => {\n    if(!db) return;\n    return db.transaction(IDB_PENDING_REVIEWS)\n             .objectStore(IDB_PENDING_REVIEWS)\n             .getAll();\n  })\n  .then(reviews => {\n    const reviewList = [];\n    reviews.forEach(function(review) {\n      let rev = {\n        'restaurant_id': review.restaurant_id,\n        'name': review.name,\n        'rating': review.rating,\n        'comments': review.comments,\n        'createdAt': review.createdAt,\n        'updatedAt': review.updatedAt\n      };\n      reviewList.push(postReview(rev));\n    });\n    return Promise.all(reviewList);\n  })\n  .then(reviews => {\n    dbPromise.then( db => {\n      if(!db) return;\n      const clear = db.transaction(IDB_PENDING_REVIEWS, \"readwrite\");\n      clear.objectStore(IDB_PENDING_REVIEWS).clear();\n      return clear.complete;\n    })\n  })\n  .catch(error => {\n    console.error(error);\n  })\n}\n\n\n/**\n * @description  Send all reviews to server\n * @constructor\n */\nfunction sendAllFavorites() {\n  dbPromise.then( db => {\n    if(!db) return;\n    return db.transaction(IDB_PENDING_RESTAURANTS)\n             .objectStore(IDB_PENDING_RESTAURANTS)\n             .getAll();\n  })\n  .then(favorites => {\n    const favoriteList = [];\n    favorites.forEach(function(favorite) {\n      favoriteList.push(putFavorite(favorite));\n    });\n    return Promise.all(favoriteList);\n  })\n  .then(favorites => {\n    dbPromise.then( db => {\n      if(!db) return;\n      const clear = db.transaction(IDB_PENDING_RESTAURANTS, \"readwrite\");\n      clear.objectStore(IDB_PENDING_RESTAURANTS).clear();\n      return clear.complete;\n    })\n  })\n  .catch(error => {\n    console.error(error);\n  })\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}