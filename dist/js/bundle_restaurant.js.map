{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/idb/lib/idb.js","resources/js/dbhelper.js","resources/js/restaurant_info.js"],"names":[],"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","file":"bundle_restaurant.js","sourcesContent":["(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c=\"function\"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error(\"Cannot find module '\"+i+\"'\");throw a.code=\"MODULE_NOT_FOUND\",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u=\"function\"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n","const idb = require('idb');\r\nconst IDB_DB = 'restaurant-db';\r\nconst IDB_RESTAURANTS = 'restaurants';\r\nconst IDB_PENDING_RESTAURANTS = 'pending_restaurants';\r\nconst IDB_REVIEWS = 'reviews';\r\nconst IDB_PENDING_REVIEWS = 'pending_reviews';\r\nlet tagName = '';\r\n\r\n /**\r\n  * @description  Common database helper functions.\r\n  * @constructor\r\n  */\r\nclass DBHelper {\r\n /**\r\n  * @description  Database URL. Change this to restaurants.json file location on your server.\r\n  * @constructor\r\n  */\r\n  static get RESTAURANTS_URL() {\r\n    const port = 1337 // Change this to your server port\r\n    return `http://localhost:${port}/restaurants`;\r\n  }\r\n\r\n  /**\r\n   * @description  Database URL. Change this to restaurants.json file location on your server.\r\n   * @constructor\r\n   */\r\n   static get REVIEWS_URL() {\r\n     const port = 1337 // Change this to your server port\r\n     return `http://localhost:${port}/reviews`;\r\n   }\r\n\r\n\r\n  /**\r\n   * @description  Open database.\r\n   * @constructor\r\n   */\r\n  static openIndexedDB() {\r\n    // If the browser doesn't support service worker,\r\n    // we don't care about having a database\r\n    if (!navigator.serviceWorker) {\r\n      return Promise.resolve();\r\n    }\r\n\r\n    this.dbPromise = idb.open(IDB_DB, 2, function (upgradeDb) {\r\n      switch (upgradeDb.oldVersion) {\r\n        case 0:\r\n        case 1:\r\n        case 2:\r\n          const storeRestaurant = upgradeDb.createObjectStore(IDB_RESTAURANTS, {\r\n            keyPath: 'id'\r\n          });\r\n          storeRestaurant.createIndex('by-id', 'id', { unique: true });\r\n\r\n          const storeReviews = upgradeDb.createObjectStore(IDB_REVIEWS, {\r\n            keyPath: 'id'\r\n          });\r\n          storeReviews.createIndex('by-id', 'id', { unique: true });\r\n          storeReviews.createIndex('by-restaurant-id', 'restaurant_id');\r\n\r\n          const pendingRestaurants = upgradeDb.createObjectStore(IDB_PENDING_RESTAURANTS, {\r\n            keyPath: 'id'\r\n          });\r\n          pendingRestaurants.createIndex('by-id', 'id', {unique:true});\r\n\r\n          const pendingReviews = upgradeDb.createObjectStore(IDB_PENDING_REVIEWS, {\r\n            keyPath:'id', autoIncrement:true\r\n          });\r\n          pendingReviews.createIndex('by-id', 'id', {unique:true});\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Save data restaurant.\r\n   * @constructor\r\n   * @param {object} Object list - Object like restaurant, reveiw, ...\r\n   */\r\n  static storeIndexedDB(table, objects) {\r\n    this.dbPromise.then(function (db) {\r\n      if(!db) return;\r\n\r\n      let tx = db.transaction(table, 'readwrite');\r\n      const store = tx.objectStore(table);\r\n      if (Array.isArray(objects)) {\r\n        objects.forEach(function(object){\r\n          store.put(object);\r\n        });\r\n      } else {\r\n        store.put(objects);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Get a collection of objects from indexedDB.\r\n   * @constructor\r\n   */\r\n  static getStoredObjects(table) {\r\n    return this.dbPromise.then(function(db) {\r\n      if(!db) return;\r\n      const store = db.transaction(table).objectStore(table);\r\n      return store.getAll();\r\n    })\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Get object from indexedDB by index\r\n   * @constructor {int} id - Restaurant id\r\n   */\r\n  static getStoredObjectById(table, idx, id) {\r\n    return this.dbPromise.then(function(db) {\r\n      if(!db) return;\r\n\r\n      const store = db.transaction(table).objectStore(table);\r\n      const indexId = store.index(idx);\r\n      return indexId.getAll(id);\r\n    });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch all restaurants.\r\n  * @constructor\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchRestaurants(callback) {\r\n    fetch(DBHelper.RESTAURANTS_URL)\r\n      .then(response => response.json())\r\n      .then(restaurants => {\r\n        DBHelper.storeIndexedDB(IDB_RESTAURANTS, restaurants);\r\n        callback(null, restaurants);\r\n      })\r\n      .catch(error => {\r\n        DBHelper.getStoredObjects(IDB_RESTAURANTS)\r\n        .then((storedRestaurants) => {\r\n          callback(null, storedRestaurants);\r\n        }).catch(error => {\r\n          callback(error, null);\r\n        })\r\n      });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch a restaurant by its ID.\r\n  * @constructor\r\n  * @param {int} id - Restaurant identifier.\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchRestaurantById(id, callback) {\r\n    fetch(`${DBHelper.RESTAURANTS_URL}/${id}`)\r\n      .then(response => response.json())\r\n      .then(restaurant => {\r\n        DBHelper.storeIndexedDB(IDB_RESTAURANTS, restaurant);\r\n        callback(null, restaurant);\r\n      })\r\n      .catch(error => {\r\n        DBHelper.getStoredObjectById(IDB_RESTAURANTS, 'by-id' ,id)\r\n        .then((storedRestaurant) => {\r\n          callback(null, storedRestaurant);\r\n        }).catch(error => {\r\n          callback(error, null);\r\n        })\r\n      });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch restaurants by a cuisine type with proper error handling.\r\n  * @constructor\r\n  * @param {string} cuisine - Neighborhood selected.\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchRestaurantByCuisine(cuisine, callback) {\r\n    // Fetch all restaurants  with proper error handling\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given cuisine type\r\n        const results = restaurants.filter(r => r.cuisine_type == cuisine);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch restaurants by a neighborhood with proper error handling.\r\n  * @constructor\r\n  * @param {string} neighborhood - Neighborhood selected.\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchRestaurantByNeighborhood(neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Filter restaurants to have only given neighborhood\r\n        const results = restaurants.filter(r => r.neighborhood == neighborhood);\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n  * @constructor\r\n  * @param {string} cuisine - Cuisine selected.\r\n  * @param {string} neighborhood - Neighborhood selected.\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        let results = restaurants;\r\n        if (cuisine != 'all') { // filter by cuisine\r\n          results = results.filter(r => r.cuisine_type == cuisine);\r\n        }\r\n        if (neighborhood != 'all') { // filter by neighborhood\r\n          results = results.filter(r => r.neighborhood == neighborhood);\r\n        }\r\n        callback(null, results);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch all neighborhoods with proper error handling.\r\n  * @constructor\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchNeighborhoods(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all neighborhoods from all restaurants\r\n        const neighborhoods = restaurants.map((v, i) => restaurants[i].neighborhood)\r\n        // Remove duplicates from neighborhoods\r\n        const uniqueNeighborhoods = neighborhoods.filter((v, i) => neighborhoods.indexOf(v) == i)\r\n        callback(null, uniqueNeighborhoods);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Fetch all cuisines with proper error handling.\r\n  * @constructor\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchCuisines(callback) {\r\n    // Fetch all restaurants\r\n    DBHelper.fetchRestaurants((error, restaurants) => {\r\n      if (error) {\r\n        callback(error, null);\r\n      } else {\r\n        // Get all cuisines from all restaurants\r\n        const cuisines = restaurants.map((v, i) => restaurants[i].cuisine_type)\r\n        // Remove duplicates from cuisines\r\n        const uniqueCuisines = cuisines.filter((v, i) => cuisines.indexOf(v) == i)\r\n        callback(null, uniqueCuisines);\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n\r\n  /**\r\n  * @description  Fetch all reviews.\r\n  * @constructor\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchReviews(callback) {\r\n    fetch(DBHelper.REVIEWS_URL)\r\n      .then(response => response.json())\r\n      .then(reviews => {\r\n        DBHelper.storeIndexedDB(IDB_REVIEWS, reviews);\r\n        callback(null, reviews);\r\n      })\r\n      .catch(error => {\r\n        DBHelper.getStoredObjects(IDB_REVIEWS)\r\n        .then((storedReviews) => {\r\n          callback(null, storedReviews);\r\n        }).catch(error => {\r\n          callback(error, null);\r\n        })\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Fetch a review by its ID.\r\n   * @constructor\r\n   * @param {int} id - Reviews identifier.\r\n   * @param {function} callback - Callback function.\r\n   */\r\n   static fetchReviewsById(id, callback) {\r\n     fetch(`${DBHelper.REVIEWS_URL}/${id}`)\r\n       .then(response => response.json())\r\n       .then(review => {\r\n         DBHelper.storeIndexedDB(IDB_REVIEWS, review);\r\n         callback(null, review)\r\n       })\r\n       .catch(error => {\r\n         DBHelper.getStoredObjectById(IDB_REVIEWS, 'by-id', id)\r\n         .then((storedReview) => {\r\n           callback(null, storedReview);\r\n         }).catch(error => {\r\n           callback(error, null);\r\n         })\r\n       });\r\n   }\r\n\r\n\r\n /**\r\n  * @description  Fetch all restaurant reviews by restaurant ID.\r\n  * @constructor\r\n  * @param {int} id - Restaurant identifier.\r\n  * @param {function} callback - Callback function.\r\n  */\r\n  static fetchReviewsByRestId(id, callback) {\r\n    fetch(`${DBHelper.REVIEWS_URL}/?restaurant_id=${id}`)\r\n      .then(response => response.json())\r\n      .then(reviews => {\r\n        DBHelper.storeIndexedDB(IDB_REVIEWS, reviews);\r\n        callback(null, reviews)\r\n      })\r\n      .catch(error => {\r\n        DBHelper.getStoredObjectById(IDB_REVIEWS, 'by-restaurant-id', id)\r\n        .then((storedReviews) => {\r\n          callback(null, storedReviews);\r\n        }).catch(error => {\r\n          callback(error, null);\r\n        })\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Send review to server and stores it at database.\r\n   * @constructor\r\n   * @param {object} review - Reviwe object.\r\n   * @param {function} callback - Callback function.\r\n   */\r\n  static postReview(review, callback) {\r\n    fetch(DBHelper.REVIEWS_URL,\r\n      {\r\n        method:'post',\r\n        body:review\r\n      })\r\n      .then(response => response.json())\r\n      .then(review => {\r\n        DBHelper.storeIndexedDB(IDB_REVIEWS, review);\r\n        callback(null, review);\r\n      })\r\n      .catch(error => {\r\n        //Error sending review to server.\r\n        DBHelper.tagName = 'review';\r\n        DBHelper.addSyncServiceWorker();\r\n        DBHelper.storeIndexedDB(IDB_PENDING_REVIEWS, JSON.parse(review));\r\n        callback(null, review);\r\n      });\r\n  }\r\n\r\n\r\n  /**\r\n   * @description  Send request favorite/unfavorite to server and changes at database.\r\n   * @constructor\r\n   * @param {int} id - Restaurant identifier.\r\n   * @param {boolean} favorite - True to mark as favorite, otherwise false.\r\n   * @param {function} callback - Callback function.\r\n   */\r\n  static putFavorite(id, favorite, callback) {\r\n    fetch(`${DBHelper.RESTAURANTS_URL}/${id}/?is_favorite=${favorite}`,\r\n      {\r\n        method:'put',\r\n        body:favorite\r\n      })\r\n      .then(response => response.json())\r\n      .then(favorite => {\r\n        DBHelper.storeIndexedDB(IDB_RESTAURANTS, favorite);\r\n        callback(null, favorite);\r\n      })\r\n      .catch(error => {\r\n        //Error sending favorite/unfavorite to server.\r\n        callback(null, favorite);\r\n      });\r\n  }\r\n\r\n\r\n /**\r\n  * @description  Restaurant page URL.\r\n  * @constructor\r\n  * @param {object} restaurant - Restaurant information.\r\n  */\r\n  static urlForRestaurant(restaurant) {\r\n    return (`./restaurant.html?id=${restaurant.id}`);\r\n  }\r\n\r\n\r\n /**\r\n  * @description Restaurant image URL.\r\n  * @constructor\r\n  * @param {object} restaurant - Restaurant information.\r\n  */\r\n  static imageUrlForRestaurant(restaurant) {\r\n    let photograph = ('photograph' in restaurant) ? restaurant.photograph : restaurant.id;\r\n    return (`/dist/img/${photograph}`);\r\n  }\r\n\r\n\r\n /**\r\n  * @description Map marker for a restaurant.\r\n  * @constructor\r\n  * @param {object} restaurant - Restaurant coords and name.\r\n  * @param {object} map - Google map object.\r\n  */\r\n  static mapMarkerForRestaurant(restaurant, map) {\r\n    const marker = new google.maps.Marker({\r\n      position: restaurant.latlng,\r\n      title: restaurant.name,\r\n      url: DBHelper.urlForRestaurant(restaurant),\r\n      map: map,\r\n      animation: google.maps.Animation.DROP}\r\n    );\r\n    return marker;\r\n  }\r\n\r\n\r\n /**\r\n  * @description Register ServiceWorker.\r\n  * @constructor\r\n  */\r\n  static registerServiceWorker() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.register('sw.js')\r\n        .then((reg) => {\r\n          console.log(`Service Worker registration successful. Its scope is ${reg.scope} `);\r\n        }).catch((error) => {\r\n          console.log(`Service Worker registration error: ${error}`);\r\n        });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @description Register ServiceWorker.\r\n   * @constructor\r\n   */\r\n   static addSyncServiceWorker() {\r\n     navigator.serviceWorker.ready.then(function(registration) {\r\n       registration.sync.register(DBHelper.tagName).then(function() {\r\n         console.log(`Registration ${DBHelper.tagName} succeeded.`);\r\n       }, function() {\r\n         console.error(`Registration ${DBHelper.tagName} failed!`);\r\n       });\r\n     });\r\n   }\r\n\r\n\r\n  /**\r\n    * @description Show or hide message when Service Worker is online o offline.\r\n    * @constructor\r\n    * @param {string} offline - String detected.\r\n    * @param {event} event - Event called\r\n    */\r\n    static showMessage(type) {\r\n      let message = document.getElementById('sw-message');\r\n      switch(type) {\r\n        case 'online':\r\n          message.style.display = 'none';\r\n          break;\r\n        case 'offline':\r\n          message.style.display = 'block';\r\n          break;\r\n      }\r\n    }\r\n\r\n}\r\nmodule.exports = DBHelper;\r\n","const DBHelper = require('./dbhelper');\nlet restaurant;\nlet reviews;\nlet is_favorite;\nlet map;\nlet staticMap = false;\nconst MONTH = {\n  0: 'January',\n  1: 'February',\n  2: 'March',\n  3: 'April',\n  4: 'May',\n  5: 'June',\n  6: 'July',\n  7: 'August',\n  8: 'September',\n  9: 'October',\n  10: 'November',\n  11: 'December'\n};\n\n/**\n  * @description Call functions when DOM content is loaded\n  * @constructor\n  * @param {string} DOMContentLoaded - String detected.\n  * @param {event} event - Event called\n  */\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  DBHelper.registerServiceWorker();\n  DBHelper.openIndexedDB();\n  eventListenerSubmitedReview();\n});\n\n\n/**\n  * @description Call functions when window is resized\n  * @constructor\n  * @param {string} resize - String detected.\n  * @param {event} event - Event called\n  */\nwindow.addEventListener('resize', (event) =>{\n  initMap();\n});\n\n\n/**\n  * @description Call functions when service worker is online.\n  * @constructor\n  * @param {string} online - String detected.\n  * @param {event} event - Event called\n  */\n window.addEventListener('online',(event)=>{\n   event.preventDefault();\n   DBHelper.showMessage(event.type);\n });\n\n\n /**\n   * @description Call functions when service worker is offline.\n   * @constructor\n   * @param {string} offline - String detected.\n   * @param {event} event - Event called\n   */\n window.addEventListener('offline',(event)=>{\n   event.preventDefault();\n   DBHelper.showMessage(event.type);\n });\n\n\n/**\n * @description  Fetch reviews by restaurant id and set their HTML.\n * @constructor\n * @param {object} error - error object.\n * @param {object} neighborhoods - neighborhood list.\n */\nfetchReviewsByRestId = (id) => {\n  DBHelper.fetchReviewsByRestId(id, (error, reviews) => {\n    self.reviews = reviews;\n    if (!reviews) {\n      console.error(error);\n      return;\n    } else {\n      fillReviewsHTML();\n    }\n  });\n}\n\n\n/**\n  * @description Get current restaurant from page URL.\n  * @constructor\n  * @param {callback} callback - Callback returned.\n  */\nfetchRestaurantFromURL = (callback) => {\n  if (self.restaurant) { // restaurant already fetched!\n    callback(null, self.restaurant)\n    return;\n  }\n  const id = getParameterByName('id');\n  if (!id) { // no id found in URL\n    error = 'No restaurant id in URL'\n    callback(error, null);\n  } else {\n    DBHelper.fetchRestaurantById(id, (error, restaurant) => {\n      if (!restaurant) {\n        console.error(error);\n        return;\n      }\n      self.restaurant = restaurant;\n      self.is_favorite = (restaurant.is_favorite == 'true') ? true: false;addEventListener\n      fillRestaurantHTML();\n      callback(null, restaurant);\n    });\n  }\n}\n\n\n/**\n * @description Create restaurant HTML and add it to the webpage.\n * @constructor\n * @param {object} restaurant - All restaurant info.\n */\nfillRestaurantHTML = (restaurant = self.restaurant) => {\n  const name = document.getElementById('restaurant-name');\n  name.innerHTML = restaurant.name;\n\n  const address = document.getElementById('restaurant-address');\n  address.innerHTML = restaurant.address;\n\n  const favorite = document.getElementById('favorite');\n  const link = document.createElement('a');\n  link.className = 'favorite';\n  link.setAttribute('role', 'button');\n  link.setAttribute('tabindex', '0');\n  eventListenerFavorite(link);\n\n  const svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  svg.setAttribute('class','svg-fav');\n  svg.setAttribute('viewBox','0 0 576 512');\n  svg.setAttribute('aria-labelledby','title description');\n\n  const title = document.createElementNS('http://www.w3.org/2000/svg', \"title\");\n  title.setAttribute('id', 'title');\n\n  const desc = document.createElementNS('http://www.w3.org/2000/svg', \"desc\");\n  desc.setAttribute('id', 'description');\n  desc.innerHTML = 'Favorite image';\n\n  const path = document.createElementNS('http://www.w3.org/2000/svg', 'path');\n  path.setAttribute('class','path-fav');\n  path.setAttribute('role','presentation');\n\n  if( self.is_favorite ) {\n    link.title = 'Remove favorite';\n    link.setAttribute('aria-label', 'Remove favorite');\n    link.dataset.favorite = 'remove';\n    title.innerHTML = 'Remove favorite';\n    path.setAttribute(\"d\",\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\");\n  } else {\n    link.title = 'Add to favorite';\n    link.setAttribute('aria-label', 'Add to favorite');\n    link.dataset.favorite = 'add';\n    title.innerHTML = 'Add to favorite';\n    path.setAttribute(\"d\",\"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\");\n  }\n\n  svg.appendChild(title);\n  svg.appendChild(desc);\n  svg.appendChild(path);\n  link.append(svg);\n  favorite.append(link);\n\n  const img = DBHelper.imageUrlForRestaurant(restaurant);\n  const picture = document.getElementById('restaurant-picture');\n  picture.className = 'restaurant-img';\n  picture.setAttribute('aria-labelledby', `restaurant-img`);\n  picture.setAttribute('role', 'img');\n\n  const sourceSmall = document.createElement('source');\n  sourceSmall.setAttribute('media', '(max-width:480px)');\n  sourceSmall.setAttribute('srcset', `${img}-380_small.jpg`);\n  picture.append(sourceSmall);\n\n  const sourceMedium = document.createElement('source');\n  sourceMedium.setAttribute('media', '(min-width: 480px) and (max-width: 960px)');\n  sourceMedium.setAttribute('srcset', `${img}-512_medium.jpg`);\n  picture.append(sourceMedium);\n\n  const sourceLarge = document.createElement('source');\n  sourceLarge.setAttribute('media', '(min-width:961px)');\n  sourceLarge.setAttribute('srcset', `${img}-800_large.jpg`);\n  picture.append(sourceLarge);\n\n  const image = document.getElementById('restaurant-img');\n  image.className = 'restaurant-img';\n  image.alt = `Picture of ${restaurant.name} restaurant`;\n  image.src = `${img}-380_small.jpg`;\n\n  picture.append(image);\n\n  const cuisine = document.getElementById('restaurant-cuisine');\n  cuisine.innerHTML = restaurant.cuisine_type;\n\n  // fill operating hours\n  if (restaurant.operating_hours) {\n    fillRestaurantHoursHTML();\n  }\n\n  fetchReviewsByRestId(restaurant.id);\n}\n\n\n/**\n  * @description Create restaurant operating hours HTML table and add it to the webpage.\n  * @constructor\n  * @param {object} operatingHours - All restaurant operating hours.\n  */\nfillRestaurantHoursHTML = (operatingHours = self.restaurant.operating_hours) => {\n  const hours = document.getElementById('restaurant-hours');\n  for (let key in operatingHours) {\n    const row = document.createElement('tr');\n\n    const day = document.createElement('td');\n    day.innerHTML = key;\n    row.appendChild(day);\n\n    const time = document.createElement('td');\n    time.innerHTML = operatingHours[key];\n    row.appendChild(time);\n\n    hours.appendChild(row);\n  }\n}\n\n\n/**\n * @description Create all reviews HTML and add them to the webpage.\n * @constructor\n * @param {object} reviews - All reviews related to a restaurant.\n */\nfillReviewsHTML = (reviews = self.reviews) => {\n\n  if (!reviews) {\n    fetchReviewsByRestId(self.restaurant.id);\n  }\n  const container = document.getElementById('reviews-container');\n  const title = document.createElement('h3');\n  title.innerHTML = '';\n  title.innerHTML = 'Reviews';\n  container.appendChild(title);\n\n  if (!reviews) {\n    const noReviews = document.createElement('p');\n    noReviews.innerHTML = 'No reviews yet!';\n    container.appendChild(noReviews);\n    return;\n  }\n  const ul = document.getElementById('reviews-list');\n  ul.innerHTML = '';\n\n  reviews.forEach(review => {\n    ul.appendChild(createReviewHTML(review));\n  });\n  container.appendChild(ul);\n}\n\n\n/**\n * @description Create review HTML and add it to the webpage.\n * @constructor\n * @param {object} review - One reveiw from a restaurant.\n */\ncreateReviewHTML = (review) => {\n  const li = document.createElement('li');\n  const name = document.createElement('p');\n  name.innerHTML = review.name;\n  li.appendChild(name);\n\n  const date = document.createElement('p');\n  let fullDate = new Date(review.createdAt);\n  date.innerHTML\t= `${MONTH[fullDate.getMonth()]} ${fullDate.getDate()}, ${fullDate.getFullYear()}`;\n  li.appendChild(date);\n\n  const rating = document.createElement('p');\n  rating.innerHTML = `Rating: ${review.rating}`;\n  li.appendChild(rating);\n\n  const comments = document.createElement('p');\n  comments.innerHTML = review.comments;\n  li.appendChild(comments);\n\n  return li;\n}\n\n\n/**\n * @description Add restaurant name to the breadcrumb navigation menu.\n * @constructor\n * @param {object} restaurant - Restaurant information.\n */\nfillBreadcrumb = (restaurant=self.restaurant) => {\n  const breadcrumb = document.getElementById('breadcrumb');\n  const li = document.createElement('li');\n  li.innerHTML = restaurant.name;\n  breadcrumb.appendChild(li);\n}\n\n/**\n * @description Get a parameter by name from page URL.\n * @constructor\n * @param {string} name - parameter name\n * @param {string} url - url requested\n */\ngetParameterByName = (name, url) => {\n  if (!url)\n    url = window.location.href;\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\n  const regex = new RegExp(`[?&]${name}(=([^&#]*)|&|#|$)`),\n    results = regex.exec(url);\n  if (!results)\n    return null;\n  if (!results[2])\n    return '';\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\n}\n\n/**\n* @description  Depends of resolutions initalize image map or google map.\n* @constructor\n*/\nwindow.initMap = () => {\n  if(window.innerWidth < 641) {\n    var googleMap = document.getElementById('map');\n    googleMap.style.display = 'none';\n    displayStaticMap();\n    self.staticMap = true;\n  } else {\n    var imageMap = document.getElementById('static-map');\n    imageMap.style.display = 'none';\n    displayMap();\n    self.staticMap = false;\n  }\n}\n\n\n/**\n* @description  Initialize Google map, called from HTML.\n* @constructor\n*/\ndisplayMap = () => {\n  if(self.staticMap === false) {\n    return;\n  }\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      let googleMap = document.getElementById('map');\n      googleMap.style.display = 'block';\n      self.staticMap = false;\n\n      self.map = new google.maps.Map(document.getElementById('map'), {\n        zoom: 16,\n        center: restaurant.latlng,\n        scrollwheel: false\n      });\n\n      DBHelper.mapMarkerForRestaurant(restaurant, self.map);\n    }\n  });\n\n}\n\n\n/**\n* @description  Display Static map at Mobile resolutions.\n* @constructor\n*/\ndisplayStaticMap = () => {\n  if(self.staticMap === true) {\n    return;\n  }\n  fetchRestaurantFromURL((error, restaurant) => {\n    if (error) { // Got an error!\n      console.error(error);\n    } else {\n      let imageMap = document.getElementById('static-map');\n      imageMap.style.display = 'block';\n      fillBreadcrumb();\n      DBHelper.mapMarkerForRestaurant(self.restaurant, self.map);\n      imageMap.setAttribute('src',`https://maps.googleapis.com/maps/api/staticmap?center=${restaurant.latlng.lat},${restaurant.latlng.lng}&size=${window.innerWidth}x400&format=jpg&maptype=roadmap&markers=color:red|${restaurant.latlng.lat},${restaurant.latlng.lng}&key=AIzaSyCtvz3BAT5-XChlZ_dhuW3GAglJeHk_2Os`);\n      self.staticMap = true;\n      imageMap.addEventListener('click',function(e) {\n        e.preventDefault();\n        imageMap.style.display ='none';\n        displayMap();\n      });\n    }\n  });\n}\n\n\n/**\n * @description Calls click event of submited button.\n * @constructor\n */\neventListenerSubmitedReview = () => {\n  let submitReview = document.getElementById('submit');\n  submitReview.addEventListener('click',function(e) {\n    e.preventDefault();\n    const alert = document.getElementById('alert');\n    alert.innerHTML = '';\n    alert.style.display = 'none';\n    const success = document.getElementById('success');\n    success.style.display = 'none';\n\n    let review = {\n      'restaurant_id': self.restaurant.id,\n      'name': document.getElementById('name').value,\n      'rating': document.querySelector('#rating').value,\n      'comments': document.getElementById('review').value,\n      'createdAt': Date.now(),\n      'updatedAt': Date.now()\n    }\n\n    if (validateForm(review)) {\n      sendReview(review, e);\n      success.style.display = 'block';\n    } else {\n      alert.style.display = 'block';\n    }\n  });\n}\n\n\n/**\n * @description Validate review form.\n * @constructor\n */\nvalidateForm = (review) => {\n  //All fields are required.\n  let name = review.name;\n  let rating = review.rating;\n  let comment = review.review;\n  let isValid = true;\n  const alert = document.getElementById('alert');\n  alert.innerHTML = '';\n  let aTitle = document.createElement('p');\n  aTitle.innerHTML = 'Please fill required fields:';\n  alert.appendChild(aTitle);\n\n  if( name == \"\" ) {\n    isValid =false;\n    let aName = document.createElement('p');\n    aName.innerHTML = '* Name is required.';\n    alert.appendChild(aName);\n  }\n  if( rating == \"\" ) {\n    isValid =false;\n    let aRating = document.createElement('p');\n    aRating.innerHTML = '* Review is required';\n    alert.appendChild(aRating);\n  }\n  if( comment == \"\" ) {\n    isValid =false;\n    let aReview = document.createElement('p');\n    aReview.innerHTML = '* Rating is required';\n    alert.appendChild(aReview);\n  }\n  return isValid;\n}\n\n\n/**\n * @description Create a new review\n * @constructor\n * @param {e} error  - Error handle.\n */\nsendReview = (review, e) => {\n  DBHelper.postReview(JSON.stringify(review), (error, result) => {\n    if (!result) {\n      console.error(error);\n      return;\n    }\n    self.reviews.push(review);\n    fillReviewsHTML();\n  });\n}\n\n\n/**\n * @description Calls click event of favorite/unfavorite button.\n * @constructor\n * @param {object} link  - Link to add the event listener.\n */\neventListenerFavorite = (link) => {\n  link.addEventListener('click', function(e) {\n    event.preventDefault();\n    self.is_favorite = (this.dataset.favorite == 'add') ? true : false;\n    DBHelper.putFavorite(self.restaurant.id, self.is_favorite, (error, result) => {\n      if (!result) {\n        console.error(error);\n        return;\n      }\n      self.restaurant.is_favorite = self.is_favorite ? 'true' : 'false';\n      if( self.is_favorite ) {\n        link.title = 'Remove favorite';\n        link.setAttribute('aria-label', 'Remove favorite');\n        link.dataset.favorite = 'remove';\n        link.getElementsByTagName('title')[0].innerHTML = 'Remove favorite';\n        link.getElementsByTagName('path')[0].setAttribute(\"d\",\"M259.3 17.8L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0z\");\n      } else {\n        link.title = 'Add to favorite';\n        link.setAttribute('aria-label', 'Add to favorite');\n        link.dataset.favorite = 'add';\n        link.getElementsByTagName('title')[0].innerHTML = 'Add to favorite';\n        link.getElementsByTagName('path')[0].setAttribute(\"d\",\"M528.1 171.5L382 150.2 316.7 17.8c-11.7-23.6-45.6-23.9-57.4 0L194 150.2 47.9 171.5c-26.2 3.8-36.7 36.1-17.7 54.6l105.7 103-25 145.5c-4.5 26.3 23.2 46 46.4 33.7L288 439.6l130.7 68.7c23.2 12.2 50.9-7.4 46.4-33.7l-25-145.5 105.7-103c19-18.5 8.5-50.8-17.7-54.6zM388.6 312.3l23.7 138.4L288 385.4l-124.3 65.3 23.7-138.4-100.6-98 139-20.2 62.2-126 62.2 126 139 20.2-100.6 98z\");\n      }\n    });\n  });\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}